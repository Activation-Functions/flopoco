Option 0: Do nothing radical. It seems when the options
 --ieee=standard --ieee=synopsys
are passed to ghdl in this order, we may mix standard and synopsys entities
See directory TestsSigned  
Incrementally move towards option 1 (for new operators, and when needed on legacy ones)

Option 1: 
 * Keep only std_logic_vector as IO,
 * Add an option to declare() for signed / unsigned / std_logic_vector DONE
    The default should still be std_logic_vector because we don't want to edit all the existing operators
 * add conversions to the VHDL.
 * No need to edit the TestBench architecture

Option 2 (out: see discussion below)
 Same as Option 1, but allow signed/unsigned IOs
 * Need to edit the TestBench architecture
 * Cleaner but adds more coding. For instance, in Table, need to manage the types of IOs.
 - Too many operators have sign-agnostic information

---------------------------------------------------
Should we allow signed/unsigned IO?
- Good reason for yes: it seems to be better (cleaner etc)
- Good reason for no: many operators don't care (IntAdder, all the Tables) 
	and we don't want to add noise to their interface if it brings no new functionality.
- Bad reason for no: it is several man-days of redesign of the framework, especially TestBench
	Plus several man-weeks to manually upgrade all the existing operators
Winner: NO, we keep IOs as std_logic_vector.

Should the default lib be standard (currently synopsys)?
Good reason for yes: it is the way forward
Bad reasons for no:  it requires minor editing of all existing operators 
Winner: YES, but after the transition to sollya4 is complete and we have a satisfiying regression test framework.



