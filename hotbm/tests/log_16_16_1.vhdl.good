--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- HOTBM instance for function log2(1+x).
-- wI = 16; wO = 16.
-- Order-1 polynomial approximation.
-- Decomposition:
--   alpha = 7; beta = 9;
--   T_0 (ROM):     alpha_0 = 7; beta_0 = 0;
--   T_1 (PowMult): alpha_1 = 7; beta_1 = 9.
-- Guard bits: g = 3.
-- Command line: log 16 16 1   7   rom 7 0   powmult 7 9  adhoc 9 9  1 0  7 9


--------------------------------------------------------------------------------
-- TermROM instance for order-0 term.
-- Decomposition:
--   alpha_0 = 7; beta_0 = 0; wO_0 = 19.

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity log_16_16_1_t0 is
  port ( a : in  std_logic_vector(6 downto 0);
         r : out std_logic_vector(19 downto 0) );
end entity;

architecture arch of log_16_16_1_t0 is
  signal x0   : std_logic_vector(6 downto 0);
  signal r0   : std_logic_vector(18 downto 0);
begin
  x0 <= a;

  with x0 select
    r0 <= "0000000101110000000" when "0000000", -- t[0] = 2944
          "0000010001001101000" when "0000001", -- t[1] = 8808
          "0000011100100100010" when "0000010", -- t[2] = 14626
          "0000100111110110000" when "0000011", -- t[3] = 20400
          "0000110011000010011" when "0000100", -- t[4] = 26131
          "0000111110001001010" when "0000101", -- t[5] = 31818
          "0001001001001010111" when "0000110", -- t[6] = 37463
          "0001010100000111010" when "0000111", -- t[7] = 43066
          "0001011110111110100" when "0001000", -- t[8] = 48628
          "0001101001110000101" when "0001001", -- t[9] = 54149
          "0001110100011101110" when "0001010", -- t[10] = 59630
          "0001111111000110000" when "0001011", -- t[11] = 65072
          "0010001001101001010" when "0001100", -- t[12] = 70474
          "0010010100000111111" when "0001101", -- t[13] = 75839
          "0010011110100001110" when "0001110", -- t[14] = 81166
          "0010101000110110111" when "0001111", -- t[15] = 86455
          "0010110011000111100" when "0010000", -- t[16] = 91708
          "0010111101010011101" when "0010001", -- t[17] = 96925
          "0011000111011011001" when "0010010", -- t[18] = 102105
          "0011010001011110011" when "0010011", -- t[19] = 107251
          "0011011011011101010" when "0010100", -- t[20] = 112362
          "0011100101010111110" when "0010101", -- t[21] = 117438
          "0011101111001110001" when "0010110", -- t[22] = 122481
          "0011111001000000010" when "0010111", -- t[23] = 127490
          "0100000010101110011" when "0011000", -- t[24] = 132467
          "0100001100011000010" when "0011001", -- t[25] = 137410
          "0100010101111110010" when "0011010", -- t[26] = 142322
          "0100011111100000010" when "0011011", -- t[27] = 147202
          "0100101000111110011" when "0011100", -- t[28] = 152051
          "0100110010011000101" when "0011101", -- t[29] = 156869
          "0100111011101111000" when "0011110", -- t[30] = 161656
          "0101000101000001101" when "0011111", -- t[31] = 166413
          "0101001110010000101" when "0100000", -- t[32] = 171141
          "0101010111011011111" when "0100001", -- t[33] = 175839
          "0101100000100011100" when "0100010", -- t[34] = 180508
          "0101101001100111100" when "0100011", -- t[35] = 185148
          "0101110010101000001" when "0100100", -- t[36] = 189761
          "0101111011100101001" when "0100101", -- t[37] = 194345
          "0110000100011110101" when "0100110", -- t[38] = 198901
          "0110001101010100111" when "0100111", -- t[39] = 203431
          "0110010110000111101" when "0101000", -- t[40] = 207933
          "0110011110110111001" when "0101001", -- t[41] = 212409
          "0110100111100011010" when "0101010", -- t[42] = 216858
          "0110110000001100010" when "0101011", -- t[43] = 221282
          "0110111000110001111" when "0101100", -- t[44] = 225679
          "0111000001010100011" when "0101101", -- t[45] = 230051
          "0111001001110011111" when "0101110", -- t[46] = 234399
          "0111010010010000001" when "0101111", -- t[47] = 238721
          "0111011010101001011" when "0110000", -- t[48] = 243019
          "0111100010111111100" when "0110001", -- t[49] = 247292
          "0111101011010010101" when "0110010", -- t[50] = 251541
          "0111110011100010111" when "0110011", -- t[51] = 255767
          "0111111011110000001" when "0110100", -- t[52] = 259969
          "1000000011111010100" when "0110101", -- t[53] = 264148
          "1000001100000010000" when "0110110", -- t[54] = 268304
          "1000010100000110110" when "0110111", -- t[55] = 272438
          "1000011100001000100" when "0111000", -- t[56] = 276548
          "1000100100000111101" when "0111001", -- t[57] = 280637
          "1000101100000100000" when "0111010", -- t[58] = 284704
          "1000110011111101101" when "0111011", -- t[59] = 288749
          "1000111011110100100" when "0111100", -- t[60] = 292772
          "1001000011101000110" when "0111101", -- t[61] = 296774
          "1001001011011010011" when "0111110", -- t[62] = 300755
          "1001010011001001011" when "0111111", -- t[63] = 304715
          "1001011010110101111" when "1000000", -- t[64] = 308655
          "1001100010011111110" when "1000001", -- t[65] = 312574
          "1001101010000111001" when "1000010", -- t[66] = 316473
          "1001110001101100000" when "1000011", -- t[67] = 320352
          "1001111001001110011" when "1000100", -- t[68] = 324211
          "1010000000101110011" when "1000101", -- t[69] = 328051
          "1010001000001011111" when "1000110", -- t[70] = 331871
          "1010001111100111000" when "1000111", -- t[71] = 335672
          "1010010110111111110" when "1001000", -- t[72] = 339454
          "1010011110010110001" when "1001001", -- t[73] = 343217
          "1010100101101010010" when "1001010", -- t[74] = 346962
          "1010101100111100000" when "1001011", -- t[75] = 350688
          "1010110100001011011" when "1001100", -- t[76] = 354395
          "1010111011011000101" when "1001101", -- t[77] = 358085
          "1011000010100011101" when "1001110", -- t[78] = 361757
          "1011001001101100011" when "1001111", -- t[79] = 365411
          "1011010000110011000" when "1010000", -- t[80] = 369048
          "1011010111110111011" when "1010001", -- t[81] = 372667
          "1011011110111001101" when "1010010", -- t[82] = 376269
          "1011100101111001101" when "1010011", -- t[83] = 379853
          "1011101100110111101" when "1010100", -- t[84] = 383421
          "1011110011110011100" when "1010101", -- t[85] = 386972
          "1011111010101101011" when "1010110", -- t[86] = 390507
          "1100000001100101001" when "1010111", -- t[87] = 394025
          "1100001000011010111" when "1011000", -- t[88] = 397527
          "1100001111001110101" when "1011001", -- t[89] = 401013
          "1100010110000000010" when "1011010", -- t[90] = 404482
          "1100011100110000000" when "1011011", -- t[91] = 407936
          "1100100011011101110" when "1011100", -- t[92] = 411374
          "1100101010001001101" when "1011101", -- t[93] = 414797
          "1100110000110011100" when "1011110", -- t[94] = 418204
          "1100110111011011100" when "1011111", -- t[95] = 421596
          "1100111110000001101" when "1100000", -- t[96] = 424973
          "1101000100100101111" when "1100001", -- t[97] = 428335
          "1101001011001000001" when "1100010", -- t[98] = 431681
          "1101010001101000110" when "1100011", -- t[99] = 435014
          "1101011000000111011" when "1100100", -- t[100] = 438331
          "1101011110100100010" when "1100101", -- t[101] = 441634
          "1101100100111111011" when "1100110", -- t[102] = 444923
          "1101101011011000101" when "1100111", -- t[103] = 448197
          "1101110001110000001" when "1101000", -- t[104] = 451457
          "1101111000000110000" when "1101001", -- t[105] = 454704
          "1101111110011010000" when "1101010", -- t[106] = 457936
          "1110000100101100011" when "1101011", -- t[107] = 461155
          "1110001010111101000" when "1101100", -- t[108] = 464360
          "1110010001001100000" when "1101101", -- t[109] = 467552
          "1110010111011001010" when "1101110", -- t[110] = 470730
          "1110011101100100111" when "1101111", -- t[111] = 473895
          "1110100011101110110" when "1110000", -- t[112] = 477046
          "1110101001110111001" when "1110001", -- t[113] = 480185
          "1110101111111101110" when "1110010", -- t[114] = 483310
          "1110110110000010111" when "1110011", -- t[115] = 486423
          "1110111100000110011" when "1110100", -- t[116] = 489523
          "1111000010001000010" when "1110101", -- t[117] = 492610
          "1111001000001000101" when "1110110", -- t[118] = 495685
          "1111001110000111011" when "1110111", -- t[119] = 498747
          "1111010100000100101" when "1111000", -- t[120] = 501797
          "1111011010000000011" when "1111001", -- t[121] = 504835
          "1111011111111010101" when "1111010", -- t[122] = 507861
          "1111100101110011010" when "1111011", -- t[123] = 510874
          "1111101011101010100" when "1111100", -- t[124] = 513876
          "1111110001100000001" when "1111101", -- t[125] = 516865
          "1111110111010100011" when "1111110", -- t[126] = 519843
          "1111111101000111010" when "1111111", -- t[127] = 522810
          "-------------------" when others;

  r(18 downto 0) <= r0;
  r(19 downto 19) <= (19 downto 19 => ('0'));
end architecture;


--------------------------------------------------------------------------------
-- PowerAdHoc instance for order-1 powering unit.
-- Decomposition:
--   beta_1 = 9; mu_1 = 9; lambda_1 = 9.

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity log_16_16_1_t1_pow is
  port ( x : in  std_logic_vector(7 downto 0);
         r : out std_logic_vector(8 downto 0) );
end entity;

architecture arch of log_16_16_1_t1_pow is
  signal pp0 : std_logic_vector(7 downto 0);
  signal r0 : std_logic_vector(7 downto 0);
begin
  pp0(7) <= x(7);

  pp0(6) <= x(6);

  pp0(5) <= x(5);

  pp0(4) <= x(4);

  pp0(3) <= x(3);

  pp0(2) <= x(2);

  pp0(1) <= x(1);

  pp0(0) <= x(0);

  r0 <= pp0;
  r <= "1" & r0(7 downto 0);
end architecture;


--------------------------------------------------------------------------------
-- TermPowMult::Table instance for order-1 term Q_1.
-- Decomposition:
--   alpha_1,1 = 7; wO_1,1 = 12.

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity log_16_16_1_t1_t1 is
  port ( a : in  std_logic_vector(6 downto 0);
         r : out std_logic_vector(11 downto 0) );
end entity;

architecture arch of log_16_16_1_t1_t1 is
  signal x : std_logic_vector(6 downto 0);
begin
  x <= a;

  with x select
    r <= "101101111111" when "0000000", -- t[0] = 2943
         "101101101000" when "0000001", -- t[1] = 2920
         "101101010010" when "0000010", -- t[2] = 2898
         "101100111100" when "0000011", -- t[3] = 2876
         "101100100110" when "0000100", -- t[4] = 2854
         "101100010001" when "0000101", -- t[5] = 2833
         "101011111100" when "0000110", -- t[6] = 2812
         "101011100111" when "0000111", -- t[7] = 2791
         "101011010011" when "0001000", -- t[8] = 2771
         "101010111111" when "0001001", -- t[9] = 2751
         "101010101011" when "0001010", -- t[10] = 2731
         "101010010111" when "0001011", -- t[11] = 2711
         "101010000100" when "0001100", -- t[12] = 2692
         "101001110001" when "0001101", -- t[13] = 2673
         "101001011110" when "0001110", -- t[14] = 2654
         "101001001100" when "0001111", -- t[15] = 2636
         "101000111001" when "0010000", -- t[16] = 2617
         "101000100111" when "0010001", -- t[17] = 2599
         "101000010110" when "0010010", -- t[18] = 2582
         "101000000100" when "0010011", -- t[19] = 2564
         "100111110011" when "0010100", -- t[20] = 2547
         "100111100010" when "0010101", -- t[21] = 2530
         "100111010001" when "0010110", -- t[22] = 2513
         "100111000000" when "0010111", -- t[23] = 2496
         "100110110000" when "0011000", -- t[24] = 2480
         "100110100000" when "0011001", -- t[25] = 2464
         "100110010000" when "0011010", -- t[26] = 2448
         "100110000000" when "0011011", -- t[27] = 2432
         "100101110001" when "0011100", -- t[28] = 2417
         "100101100001" when "0011101", -- t[29] = 2401
         "100101010010" when "0011110", -- t[30] = 2386
         "100101000011" when "0011111", -- t[31] = 2371
         "100100110100" when "0100000", -- t[32] = 2356
         "100100100110" when "0100001", -- t[33] = 2342
         "100100010111" when "0100010", -- t[34] = 2327
         "100100001001" when "0100011", -- t[35] = 2313
         "100011111011" when "0100100", -- t[36] = 2299
         "100011101101" when "0100101", -- t[37] = 2285
         "100011011111" when "0100110", -- t[38] = 2271
         "100011010010" when "0100111", -- t[39] = 2258
         "100011000100" when "0101000", -- t[40] = 2244
         "100010110111" when "0101001", -- t[41] = 2231
         "100010101010" when "0101010", -- t[42] = 2218
         "100010011101" when "0101011", -- t[43] = 2205
         "100010010000" when "0101100", -- t[44] = 2192
         "100010000100" when "0101101", -- t[45] = 2180
         "100001110111" when "0101110", -- t[46] = 2167
         "100001101011" when "0101111", -- t[47] = 2155
         "100001011111" when "0110000", -- t[48] = 2143
         "100001010011" when "0110001", -- t[49] = 2131
         "100001000111" when "0110010", -- t[50] = 2119
         "100000111011" when "0110011", -- t[51] = 2107
         "100000101111" when "0110100", -- t[52] = 2095
         "100000100100" when "0110101", -- t[53] = 2084
         "100000011000" when "0110110", -- t[54] = 2072
         "100000001101" when "0110111", -- t[55] = 2061
         "100000000010" when "0111000", -- t[56] = 2050
         "011111110111" when "0111001", -- t[57] = 2039
         "011111101100" when "0111010", -- t[58] = 2028
         "011111100001" when "0111011", -- t[59] = 2017
         "011111010110" when "0111100", -- t[60] = 2006
         "011111001100" when "0111101", -- t[61] = 1996
         "011111000001" when "0111110", -- t[62] = 1985
         "011110110111" when "0111111", -- t[63] = 1975
         "011110101101" when "1000000", -- t[64] = 1965
         "011110100011" when "1000001", -- t[65] = 1955
         "011110011000" when "1000010", -- t[66] = 1944
         "011110001111" when "1000011", -- t[67] = 1935
         "011110000101" when "1000100", -- t[68] = 1925
         "011101111011" when "1000101", -- t[69] = 1915
         "011101110001" when "1000110", -- t[70] = 1905
         "011101101000" when "1000111", -- t[71] = 1896
         "011101011110" when "1001000", -- t[72] = 1886
         "011101010101" when "1001001", -- t[73] = 1877
         "011101001100" when "1001010", -- t[74] = 1868
         "011101000010" when "1001011", -- t[75] = 1858
         "011100111001" when "1001100", -- t[76] = 1849
         "011100110000" when "1001101", -- t[77] = 1840
         "011100100111" when "1001110", -- t[78] = 1831
         "011100011111" when "1001111", -- t[79] = 1823
         "011100010110" when "1010000", -- t[80] = 1814
         "011100001101" when "1010001", -- t[81] = 1805
         "011100000101" when "1010010", -- t[82] = 1797
         "011011111100" when "1010011", -- t[83] = 1788
         "011011110100" when "1010100", -- t[84] = 1780
         "011011101011" when "1010101", -- t[85] = 1771
         "011011100011" when "1010110", -- t[86] = 1763
         "011011011011" when "1010111", -- t[87] = 1755
         "011011010011" when "1011000", -- t[88] = 1747
         "011011001011" when "1011001", -- t[89] = 1739
         "011011000011" when "1011010", -- t[90] = 1731
         "011010111011" when "1011011", -- t[91] = 1723
         "011010110011" when "1011100", -- t[92] = 1715
         "011010101011" when "1011101", -- t[93] = 1707
         "011010100100" when "1011110", -- t[94] = 1700
         "011010011100" when "1011111", -- t[95] = 1692
         "011010010101" when "1100000", -- t[96] = 1685
         "011010001101" when "1100001", -- t[97] = 1677
         "011010000110" when "1100010", -- t[98] = 1670
         "011001111110" when "1100011", -- t[99] = 1662
         "011001110111" when "1100100", -- t[100] = 1655
         "011001110000" when "1100101", -- t[101] = 1648
         "011001101001" when "1100110", -- t[102] = 1641
         "011001100010" when "1100111", -- t[103] = 1634
         "011001011011" when "1101000", -- t[104] = 1627
         "011001010100" when "1101001", -- t[105] = 1620
         "011001001101" when "1101010", -- t[106] = 1613
         "011001000110" when "1101011", -- t[107] = 1606
         "011000111111" when "1101100", -- t[108] = 1599
         "011000111000" when "1101101", -- t[109] = 1592
         "011000110010" when "1101110", -- t[110] = 1586
         "011000101011" when "1101111", -- t[111] = 1579
         "011000100101" when "1110000", -- t[112] = 1573
         "011000011110" when "1110001", -- t[113] = 1566
         "011000011000" when "1110010", -- t[114] = 1560
         "011000010001" when "1110011", -- t[115] = 1553
         "011000001011" when "1110100", -- t[116] = 1547
         "011000000101" when "1110101", -- t[117] = 1541
         "010111111110" when "1110110", -- t[118] = 1534
         "010111111000" when "1110111", -- t[119] = 1528
         "010111110010" when "1111000", -- t[120] = 1522
         "010111101100" when "1111001", -- t[121] = 1516
         "010111100110" when "1111010", -- t[122] = 1510
         "010111100000" when "1111011", -- t[123] = 1504
         "010111011010" when "1111100", -- t[124] = 1498
         "010111010100" when "1111101", -- t[125] = 1492
         "010111001110" when "1111110", -- t[126] = 1486
         "010111001000" when "1111111", -- t[127] = 1480
         "------------" when others;
end architecture;


--------------------------------------------------------------------------------
-- TermPowMult instance for order-1 term.
-- Decomposition:
--   alpha_1 = 7; beta_1 = 9; lambda_1 = 9;  m_1 = 1;
--   Pow   (AdHoc);
--   Q_1,1 (Mult): alpha_1,1 = 7; rho_1,1 = 0; sigma_1,1 = 9; wO_1,1 = 12.

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity log_16_16_1_t1 is
  port ( a : in  std_logic_vector(6 downto 0);
         b : in  std_logic_vector(8 downto 0);
         r : out std_logic_vector(19 downto 0) );
end entity;

architecture arch of log_16_16_1_t1 is
  signal sign   : std_logic;
  signal b0     : std_logic_vector(7 downto 0);
  signal s      : std_logic_vector(8 downto 0);
  component log_16_16_1_t1_pow is
    port ( x : in  std_logic_vector(7 downto 0);
           r : out std_logic_vector(8 downto 0) );
  end component;

  signal a_1    : std_logic_vector(6 downto 0);
  signal sign_1 : std_logic;
  signal s_1    : std_logic_vector(7 downto 0);
  signal k_1    : std_logic_vector(11 downto 0);
  signal r0_1   : std_logic_vector(20 downto 0);
  signal r_1    : std_logic_vector(19 downto 0);
  component log_16_16_1_t1_t1 is
    port ( a : in  std_logic_vector(6 downto 0);
           r : out std_logic_vector(11 downto 0) );
  end component;
begin
  sign <= not b(8);
  b0 <= b(7 downto 0) xor (7 downto 0 => sign);

  pow : log_16_16_1_t1_pow
    port map ( x => b0,
               r => s );

  a_1 <= a(6 downto 0);
  sign_1 <= not s(8);
  s_1 <= s(7 downto 0) xor (7 downto 0 => sign_1);
  t_1 : log_16_16_1_t1_t1
    port map ( a => a_1,
               r => k_1 );
  r0_1 <= k_1 * (s_1 & "1");
  r_1(11 downto 0) <=
    r0_1(20 downto 9) xor (20 downto 9 => ((sign xor sign_1)));
  r_1(19 downto 12) <= (19 downto 12 => ((sign xor sign_1)));

  r <= r_1;
end architecture;


--------------------------------------------------------------------------------
-- HOTBM main component.

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity log_16_16_1 is
  port ( x : in  std_logic_vector(15 downto 0);
         r : out std_logic_vector(16 downto 0) );
end entity;

architecture arch of log_16_16_1 is
  signal a_0 : std_logic_vector(6 downto 0);
  signal r_0 : std_logic_vector(19 downto 0);
  component log_16_16_1_t0 is
    port ( a : in  std_logic_vector(6 downto 0);
           r : out std_logic_vector(19 downto 0) );
  end component;

  signal a_1 : std_logic_vector(6 downto 0);
  signal b_1 : std_logic_vector(8 downto 0);
  signal r_1 : std_logic_vector(19 downto 0);
  component log_16_16_1_t1 is
    port ( a : in  std_logic_vector(6 downto 0);
           b : in  std_logic_vector(8 downto 0);
           r : out std_logic_vector(19 downto 0) );
  end component;

  signal sum : std_logic_vector(19 downto 0);
begin
  a_0 <= x(15 downto 9);
  t_0 : log_16_16_1_t0
    port map ( a => a_0,
               r => r_0 );

  a_1 <= x(15 downto 9);
  b_1 <= x(8 downto 0);
  t_1 : log_16_16_1_t1
    port map ( a => a_1,
               b => b_1,
               r => r_1 );

  sum <= r_0 + r_1;
  r <= sum(19 downto 3);
end architecture;
