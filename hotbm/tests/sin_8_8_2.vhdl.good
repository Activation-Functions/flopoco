--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- HOTBM instance for function sin(x).
-- wI = 8; wO = 8.
-- Order-2 polynomial approximation.
-- Decomposition:
--   alpha = 5; beta = 3;
--   T_0 (ROM):     alpha_0 = 5; beta_0 = 0;
--   T_1 (ROM):     alpha_1 = 2; beta_1 = 3;
--   T_2 (ROM):     alpha_2 = 0; beta_2 = 1.
-- Guard bits: g = 2.
-- Command line: sin 8 8 2   5   rom 5 0   rom 2 3   rom 0 1


--------------------------------------------------------------------------------
-- TermROM instance for order-0 term.
-- Decomposition:
--   alpha_0 = 5; beta_0 = 0; wO_0 = 10.

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity sin_8_8_2_t0 is
  port ( a : in  std_logic_vector(4 downto 0);
         r : out std_logic_vector(10 downto 0) );
end entity;

architecture arch of sin_8_8_2_t0 is
  signal x0   : std_logic_vector(4 downto 0);
  signal r0   : std_logic_vector(9 downto 0);
begin
  x0 <= a;

  with x0 select
    r0 <= "0000001110" when "00000", -- t[0] = 14
          "0000100111" when "00001", -- t[1] = 39
          "0001000000" when "00010", -- t[2] = 64
          "0001011001" when "00011", -- t[3] = 89
          "0001110010" when "00100", -- t[4] = 114
          "0010001011" when "00101", -- t[5] = 139
          "0010100100" when "00110", -- t[6] = 164
          "0010111100" when "00111", -- t[7] = 188
          "0011010101" when "01000", -- t[8] = 213
          "0011101110" when "01001", -- t[9] = 238
          "0100000110" when "01010", -- t[10] = 262
          "0100011110" when "01011", -- t[11] = 286
          "0100110110" when "01100", -- t[12] = 310
          "0101001110" when "01101", -- t[13] = 334
          "0101100110" when "01110", -- t[14] = 358
          "0101111101" when "01111", -- t[15] = 381
          "0110010100" when "10000", -- t[16] = 404
          "0110101011" when "10001", -- t[17] = 427
          "0111000010" when "10010", -- t[18] = 450
          "0111011001" when "10011", -- t[19] = 473
          "0111101111" when "10100", -- t[20] = 495
          "1000000101" when "10101", -- t[21] = 517
          "1000011010" when "10110", -- t[22] = 538
          "1000110000" when "10111", -- t[23] = 560
          "1001000100" when "11000", -- t[24] = 580
          "1001011001" when "11001", -- t[25] = 601
          "1001101101" when "11010", -- t[26] = 621
          "1010000001" when "11011", -- t[27] = 641
          "1010010101" when "11100", -- t[28] = 661
          "1010101000" when "11101", -- t[29] = 680
          "1010111010" when "11110", -- t[30] = 698
          "1011001100" when "11111", -- t[31] = 716
          "----------" when others;

  r(9 downto 0) <= r0;
  r(10 downto 10) <= (10 downto 10 => ('0'));
end architecture;


--------------------------------------------------------------------------------
-- TermROM instance for order-1 term.
-- Decomposition:
--   alpha_1 = 2; beta_1 = 3 (1+2); wO_1 = 4.

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity sin_8_8_2_t1 is
  port ( a : in  std_logic_vector(1 downto 0);
         b : in  std_logic_vector(2 downto 0);
         r : out std_logic_vector(10 downto 0) );
end entity;

architecture arch of sin_8_8_2_t1 is
  signal sign : std_logic;
  signal b0   : std_logic_vector(1 downto 0);
  signal x0   : std_logic_vector(3 downto 0);
  signal r0   : std_logic_vector(3 downto 0);
begin
  sign <= not b(2);
  b0 <= b(1 downto 0) xor (1 downto 0 => sign);
  x0 <= a & b0;

  with x0 select
    r0 <= "0001" when "0000", -- t[0] = 1
          "0100" when "0001", -- t[1] = 4
          "0111" when "0010", -- t[2] = 7
          "1010" when "0011", -- t[3] = 10
          "0001" when "0100", -- t[4] = 1
          "0100" when "0101", -- t[5] = 4
          "0111" when "0110", -- t[6] = 7
          "1010" when "0111", -- t[7] = 10
          "0001" when "1000", -- t[8] = 1
          "0100" when "1001", -- t[9] = 4
          "0110" when "1010", -- t[10] = 6
          "1001" when "1011", -- t[11] = 9
          "0001" when "1100", -- t[12] = 1
          "0011" when "1101", -- t[13] = 3
          "0110" when "1110", -- t[14] = 6
          "1000" when "1111", -- t[15] = 8
          "----" when others;

  r(3 downto 0) <= r0 xor (3 downto 0 => (sign));
  r(10 downto 4) <= (10 downto 4 => (sign));
end architecture;


--------------------------------------------------------------------------------
-- TermROM instance for order-2 term.
-- Decomposition:
--   alpha_2 = 0; beta_2 = 1 (1+0); wO_2 = 1.

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity sin_8_8_2_t2 is
  port ( b : in  std_logic_vector(0 downto 0);
         r : out std_logic_vector(10 downto 0) );
end entity;

architecture arch of sin_8_8_2_t2 is
  signal sign : std_logic;
  signal r0   : std_logic_vector(0 downto 0);
begin
  sign <= not b(0);

  r0 <= "1"; -- t = -1

  r(0 downto 0) <= r0;
  r(10 downto 1) <= (10 downto 1 => (not '0'));
end architecture;


--------------------------------------------------------------------------------
-- HOTBM main component.

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity sin_8_8_2 is
  port ( x : in  std_logic_vector(7 downto 0);
         r : out std_logic_vector(8 downto 0) );
end entity;

architecture arch of sin_8_8_2 is
  signal a_0 : std_logic_vector(4 downto 0);
  signal r_0 : std_logic_vector(10 downto 0);
  component sin_8_8_2_t0 is
    port ( a : in  std_logic_vector(4 downto 0);
           r : out std_logic_vector(10 downto 0) );
  end component;

  signal a_1 : std_logic_vector(1 downto 0);
  signal b_1 : std_logic_vector(2 downto 0);
  signal r_1 : std_logic_vector(10 downto 0);
  component sin_8_8_2_t1 is
    port ( a : in  std_logic_vector(1 downto 0);
           b : in  std_logic_vector(2 downto 0);
           r : out std_logic_vector(10 downto 0) );
  end component;

  signal b_2 : std_logic_vector(0 downto 0);
  signal r_2 : std_logic_vector(10 downto 0);
  component sin_8_8_2_t2 is
    port ( b : in  std_logic_vector(0 downto 0);
           r : out std_logic_vector(10 downto 0) );
  end component;

  signal sum : std_logic_vector(10 downto 0);
begin
  a_0 <= x(7 downto 3);
  t_0 : sin_8_8_2_t0
    port map ( a => a_0,
               r => r_0 );

  a_1 <= x(7 downto 6);
  b_1 <= x(2 downto 0);
  t_1 : sin_8_8_2_t1
    port map ( a => a_1,
               b => b_1,
               r => r_1 );

  b_2 <= x(2 downto 2);
  t_2 : sin_8_8_2_t2
    port map ( b => b_2,
               r => r_2 );

  sum <= r_0 + r_1 + r_2;
  r <= sum(10 downto 2);
end architecture;
