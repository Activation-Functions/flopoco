Stable stuff:


FixFunction
    Centralizes Sollya parsing and evaluation to various formats, including an emulate() that works for all FixFunctionBy*

FixFunctionByTable: a flopoco operator that is the most basic implementation of a FixFunction

BasicPolyApprox: mostly Sollya stuff to compute optimal coeff sizes, the machine-efficient polynomials.

PiecewisePolyApprox: Iterates over the previous to build a regular piecewise polynomial approximation. Roughly the approximation part of previous FunctionEvaluator


FixFunctionBySimplePoly: a flopoco operator plugging  BasicPolyApprox to FixPolynomialHornerEvaluator



TODO long term: manage non-uniform errors; manage non-uniform segmentation; something for sin(sqrt(x))




FixPolynomialHornerEvaluator: 
  constructor inputs alpha,  a table of 2^alpha vectors of coefficients, lsbY
  and builds table + horner evaluator (operator inputting index and Y)

			evaluates the corresponding polynomial(s) with truncated multipliers.
								REM a trunc mult faithful to lsb will compute weights to LSB+g 



FixFunctionBySimpleBitHeap: an Operator plugging BasicPolyApprox to a bit heap back-end.
													 (with bit heaps you don't do piecewise polynomials, or you do it the HOTBM way)


FixFunctionByPiecewisePoly:
								the flopoco operator corresponding to the previous FunctionEvaluator
								It plugs PiecewisePolyApprox to FixPolynomialHornerEvaluator


		
