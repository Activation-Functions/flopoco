#ifndef __BIGTESTBENCH_HPP
#define __BIGTESTBENCH_HPP

#include "Operator.hpp"

/**
 * Creates a BigTestBench, which tests a certain Operator.
 * The test cases are generated by the unit under test (UUT).
 */
class BigTestBench : public Operator
{
public:
	/* XXX: To discuss what n represents. */
	/**
	 * Creates a BigTestBench.
	 * @param target The target architecture
	 * @param op The operator which is the UUT
	 * @param n Number of tests
	 */
	BigTestBench(Target *target, Operator *op, int n);
	~BigTestBench();

	void output_vhdl(ostream& o, string name);
private:
	/** The unit under test UUT */
	Operator *op;

	/** The parameter from the constructor */
	int n;
	
	/**
	 * Offers an ordering relationship on Signal-s based on their name.
	 * Now we can use Signal-s as keys to map, set etc.
	 */
	struct ltsignal
	{
		bool operator()(Signal s1, Signal s2) const
		{
			return (s1.id() < s2.id());
		}
	};
};


#endif

