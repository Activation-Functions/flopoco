import commands
import string
import subprocess
import sys
import time

test_cases_per_combination = 1000
testbench = "TestBenchFile"
final_test = True
path = "./flopoco"

def checkOp ( cmd_operator ):

        error_msg = "~~~~~ " + cmd_operator + " ~~~~~" + "\n"
        #initialize all at true
	pass_test = True
	#Create a logfile to report errors
	logfile = open ( "soaktest.log", "a" )

	#launch the flopoco + TestBench command
	run_cmd = path + " " + cmd_operator + " " + testbench + " " + `test_cases_per_combination`
        print " > " + run_cmd
	cmd_output = commands.getoutput ( run_cmd )
	status = string.find ( cmd_output, "Output file: flopoco.vhdl" )

	#First of all, verify if a vhdl file is generated by the TestBench command
	if status < 0 :
		did_generate_vhdl = False
                pass_test = False
		error_msg +=   "	--> vhdl did not generate\n"

        else : # VHDL generated, now pass it through ghdl        
                did_generate_vhdl = True
                ghdl_food = cmd_output [ string.find ( cmd_output, "ghdl" ) : string.find ( cmd_output, "Final" ) - 1 ]

		#now we can test the three ghdl command
		ghdl_compile = ghdl_food [ string.find ( ghdl_food, "ghdl -a" ) : string.find ( ghdl_food, "ghdl -e" ) -1 ]
                print " > " + ghdl_compile
	
		try:
                        did_compile = True
			status = subprocess.check_output ( ghdl_compile, stderr = subprocess.STDOUT, shell = True )
		except subprocess.CalledProcessError, e:
			errorstring = e.output
			error_msg +=   "	--> ghdl -a error :\n"
			error_msg +=   "	    " + errorstring + "\n"
			did_compile = False
			pass_test = False
		
		if did_compile :
			ghdl_analyse = ghdl_food [ string.find ( ghdl_food, "ghdl -e" ) : string.find ( ghdl_food, "   ghdl -r" ) - 1 ]
                        print " > " + ghdl_analyse
			try:
				status = subprocess.check_output ( ghdl_analyse, stderr = subprocess.STDOUT, shell = True )
			except subprocess.CalledProcessError, e:
				errorstring = e.output
				error_msg +=   "	--> ghdl -e error :\n"
				error_msg +=   "	    " + errorstring + "\n"
				did_compile = False
				pass_test = False
			
			if did_compile :
				ghdl_run = ghdl_food [ string.find ( ghdl_food, "ghdl -r" ) : string.find ( ghdl_food, "gtkwave" ) - 1]
				print " > " + ghdl_run
                                try:
					status = subprocess.check_output ( ghdl_run, stderr = subprocess.STDOUT, shell = True )
				except subprocess.CalledProcessError, e:
					errorstring = e.output
					if string.find ( errorstring, "Incorrect" ) != -1 :
						error_msg +=   "	--> ghdl run error :\n"
						error_msg +=   "	" + errostring + "\n\n"
						pass_test = False
	       
	subprocess.call ( "rm -f *.vcd e~testbench* testbench* *.svg", shell = True )

	final_test = did_generate_vhdl and pass_test
	
        print error_msg
	#write in the logfile only if error happened
	if not final_test :
		logfile.write ( error_msg + "\n" )

	logfile.close ()
