
stages:
  - build
  - test
  - deploy

squid_debian_build:
  stage: build
  tags:
    - debian
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "dev/master"'
      changes:
        - code/**/*
        - cmake/*
        - Makefile
        - CMakeLists.txt
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - code/**/*
        - cmake/*
        - Makefile
        - CMakeLists.txt
  before_script:
    - apt update
    - apt install -y git make sudo ninja-build
  script:
    - make sysdeps flopoco
    - make install
    - flopoco
  artifacts:
      paths:
        - build/bin
        - build/lib
        - build/dependencies/bin

squid_macos_build:
  stage: build
  tags:
    - macos
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "dev/master"'
      changes:
        - code/**/*
        - cmake/*
        - Makefile
        - CMakeLists.txt
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      changes:
        - code/**/*
        - cmake/*
        - Makefile
        - CMakeLists.txt
  script:
    - gmake sysdeps flopoco
    # Ideally, we would need to test the install step
    # but on our current runner, it would require having sudo...

squid_debian_autotests:
    stage: test
    tags:
      - debian
    rules:
      - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "dev/master"'
        changes:
          - code/**/*
          - cmake/*
          - Makefile
          - CMakeLists.txt
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        changes:
          - code/**/*
          - cmake/*
          - Makefile
          - CMakeLists.txt
    before_script:
      - apt update
      - apt install -y git make sudo
      - eval `ssh-agent -s`
      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo "$SSH_PUBLIC_KEY" >> ~/.ssh/id_rsa.pub
      - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
      - git clone git@gitlab.inria.fr:pcochard/nvc-vivado
    script:
      - make sysdeps nvc
      - export XILINX_VIVADO=./nvc-vivado && nvc --install vivado
      - make autotests
    artifacts:
      paths:
        - autotests/summary.csv

squid_debian_deploy:
    stage: deploy
    tags:
      - debian
    rules:
      - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "dev/master"'
        changes:
          - code/**/*
          - cmake/*
          - Makefile
          - CMakeLists.txt
      - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
        changes:
          - code/**/*
          - cmake/*
          - Makefile
          - CMakeLists.txt
    before_script:
      - apt update
      - apt install -y git make sudo cargo openssh-client
      - eval `ssh-agent -s`
      - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - echo "$SSH_PUBLIC_KEY" >> ~/.ssh/id_rsa.pub
      - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    script:
      - cargo install --path tools/autotests-html
      - /root/.cargo/bin/autotests-html
      - git config --global user.email "${CI_EMAIL}"
      - git config --global user.name "${CI_USERNAME}"
      - git add -f doc/web/autotests.html
      - git add -f doc/web/autotests.csv
      - git commit -m "[autotests] updated 'doc/web/autotests.html' and .csv [skip ci]"
      - git remote rm origin && git remote add origin git@gitlab.com:$CI_PROJECT_PATH.git
      - git push origin HEAD:$CI_COMMIT_REF_NAME
    artifacts:
      paths:
        - doc/web/autotests.csv
        - doc/web/autotests.html

pages:
  stage: deploy
  tags:
    - doc
  script:
    - mkdir public
    - cd doc/web/bib && bibtex2html -t "Publications about FloPoCo" --header "<p><em>If some of your works belong here, please drop a mail to F. de Dinechin with the corresponding bibtex entries</em></p><hr>" -d -r -revkeys flopoco.bib && bibtex2html -t "Publications using FloPoCo" --header "<p><em>If some of your works belong here, please drop a mail to F. de Dinechin with the corresponding bibtex entries</em></p><hr>" -d -r -revkeys flopoco-users.bib && cd ../../..
    - cd doc/flopoco_developer_manual && pdflatex flopoco_developer_manual.tex && bibtex flopoco_developer_manual && pdflatex flopoco_developer_manual.tex && pdflatex flopoco_developer_manual.tex && cp flopoco_developer_manual.pdf  ../web/ && cd ../..
    - cd doc/pdf_doc && pdflatex flopoco_manual && bibtex flopoco_manual && pdflatex flopoco_manual && pdflatex flopoco_manual && cp flopoco_manual.pdf  ../web/ && cd ../..
    - cp doc/FloPoCo-revised-AGPL-license-v1.1.pdf doc/web/
    - cp -R doc/web/* public/
  artifacts:
    paths:
      - public
  only:
    refs:
      - master
    changes:
      - doc/web/**/*
