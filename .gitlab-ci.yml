
stages:
  - build
  - test
  - deploy

pages:
  stage: deploy
  script:
    - mkdir public
    - cd doc/web/bib && bibtex2html -t "Publications about FloPoCo" --header "<p><em>If some of your works belong there, please drop a mail to F. de Dinechin with the corresponding bibtex entries</em></p><hr>" -d -r -revkeys flopoco.bib && bibtex2html -t "Publications using FloPoCo" --header "<p><em>If some of your works belong there, please drop a mail to F. de Dinechin with the corresponding bibtex entries</em></p><hr>" -d -r -revkeys flopoco-users.bib && cd ../../..
    - cd doc/flopoco_developer_manual && pdflatex flopoco_developer_manual.tex && bibtex flopoco_developer_manual && pdflatex flopoco_developer_manual.tex && pdflatex flopoco_developer_manual.tex && cp flopoco_developer_manual.pdf  ../web/ && cd ../..
    - cd doc/pdf_doc && pdflatex flopoco_manual && bibtex flopoco_manual && pdflatex flopoco_manual && pdflatex flopoco_manual && cp flopoco_manual.pdf  ../web/ && cd ../..
    - cp doc/FloPoCo-revised-AGPL-license-v1.1.pdf doc/web/
    - cp -R doc/web/* public/
  artifacts:
    paths:
      - public
  only:    
    refs:
      - master
    changes:
      - doc/web/**/*

build_squid_debian:
  stage: build
  tags:
    - debian
  before_script:
    - apt update
    - apt install -y git make sudo
  script:
    - make sysdeps flopoco
    - make install
    - flopoco
  only:    
    refs:
      - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev/master"

build_squid_macos:
  stage: build
  tags:
    - macos
  script:
    - gmake sysdeps flopoco
    # Ideally, we would need to test the install step
    # but on our current runner, it would require having sudo...
  only:
    refs:
    - merge_requests
    variables:
    - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev/master"

autotests_debian:
    stage: test
    tags:
      - debian
    only:
      - dev/autotests
    script:
      - make test
    allow_failure: true

